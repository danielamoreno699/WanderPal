openapi: 3.0.1
info:
  title: WonderPal API
  version: v1
paths:
  /api/v1/users:
    get:
      summary: List users
      responses:
        '200':
          description: Successful response containing a list of users

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully

  /api/v1/users/{id}:
    parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
    get:
      summary: Show user details
      responses:
        '200':
          description: Successful response containing user details

    patch:
      summary: Update user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Successful response after updating user

    put:
      summary: Update user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Successful response after updating user

    delete:
      summary: Delete user
      responses:
        '200':
          description: Successful response after deleting user

  /api/v1/users/{id}/reservations:
    parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
    get:
      summary: User reservations list
      responses:
        '200':
          description: Successful response containing a list of reservations for user

  /api/v1/items:
    get:
      summary: List items
      responses:
        '200':
          description: Successful response containing a list of items

    post:
      summary: Create a new item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInput'
      responses:
        '201':
          description: Item created successfully

  /api/v1/items/{id}:
    parameters:
      - name: id
        in: path
        description: ID of the item
        required: true
        schema:
          type: string
    get:
      summary: Show item details
      responses:
        '200':
          description: Successful response containing item details

    patch:
      summary: Update item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInput'
      responses:
        '200':
          description: Successful response after updating item

    put:
      summary: Update item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemInput'
      responses:
        '200':
          description: Successful response after updating item

    delete:
      summary: Delete item
      responses:
        '200':
          description: Successful response after deleting item

  /api/v1/reservations:
    get:
      summary: List reservations
      responses:
        '200':
          description: Successful response containing a list of reservations

    post:
      summary: Create a new reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationInput'
      responses:
        '201':
          description: Reservation created successfully

  /api/v1/reservations/{id}:
    parameters:
      - name: id
        in: path
        description: ID of the reservation
        required: true
        schema:
          type: string
    get:
      summary: Show reservation details
      responses:
        '200':
          description: Successful response containing reservation details

    patch:
      summary: Update Reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationInput'
      responses:
        '200':
          description: Successful response after updating reservation

    put:
      summary: Update Reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationInput'
      responses:
        '200':
          description: Successful response after updating reservation

    delete:
      summary: Delete reservation
      responses:
        '200':
          description: Successful response after deleting reservation

components:
  schemas:
    ItemInput:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        price:
          type: number
        description:
          type: string
        user_id:
          type: integer

    ReservationInput:
      type: object
      properties:
        date:
          type: string
          format: date
        city:
          type: string
        user_id:
          type: integer

    UserInput:
      type: object
      properties:
        name:
          type: string
        role:
          type: string

    Item:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        image:
          type: string
        price:
          type: number
        description:
          type: string
        user_id:
          type: integer

    Reservation:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date
        city:
          type: string
        user_id:
          type: integer

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        role:
          type: string

servers:
  - url: http://{defaultHost}
    variables:
      defaultHost:
        default: 127.0.0.1:3000
